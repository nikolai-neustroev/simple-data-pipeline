version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.7.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  clickhouse:
    image: clickhouse/clickhouse-server:24.9.1
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./clickhouse/data:/var/lib/clickhouse

  redash:
    image: redash/redash:8.0.0.b32245
    environment:
      REDASH_DATABASE_URL: "postgresql://postgres:postgres@postgres-redash/postgres"
      REDASH_REDIS_URL: "redis://redis:6379/0"
    ports:
      - "5001:5000"
    depends_on:
      - postgres-redash
      - redis

  redash-worker:
    image: redash/redash:8.0.0.b32245
    environment:
      REDASH_DATABASE_URL: "postgresql://postgres:postgres@postgres-redash/postgres"
      REDASH_REDIS_URL: "redis://redis:6379/0"
    depends_on:
      - postgres-redash
      - redis
    command: worker

  postgres-redash:
    image: postgres:12-alpine
    container_name: postgres-redash
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./postgres-redash/data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  postgres-airflow:
    image: postgres:12-alpine
    container_name: postgres-airflow
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./postgres-airflow/data:/var/lib/postgresql/data
    ports:
      - "5434:5432"

  redis:
    image: redis:5.0-alpine

  airflow-init:
    image: apache/airflow:2.10.2
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:postgres@postgres-airflow:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    depends_on:
      - postgres-airflow
      - redis
      - kafka
      - clickhouse
    entrypoint: >
      bash -c "
      airflow db init &&
      airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com
      "
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/plugins:/opt/airflow/plugins
      - ./scripts:/usr/local/scripts

  airflow-webserver:
    image: apache/airflow:2.10.2
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:postgres@postgres-airflow:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__WEBSERVER__AUTHENTICATE: 'True'
      AIRFLOW__WEBSERVER__AUTH_BACKENDS: 'airflow.contrib.auth.backends.password_auth'
      AIRFLOW__WEBSERVER__SECRET_KEY: 'secret_key'
    depends_on:
      - airflow-init
      - redis
      - kafka
      - clickhouse
    ports:
      - "8080:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/plugins:/opt/airflow/plugins
      - ./scripts:/usr/local/scripts
    command: webserver

  airflow-scheduler:
    image: apache/airflow:2.10.2
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:postgres@postgres-airflow:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__WEBSERVER__SECRET_KEY: 'secret_key'
    depends_on:
      - airflow-webserver
      - redis
      - kafka
      - clickhouse
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/plugins:/opt/airflow/plugins
      - ./scripts:/usr/local/scripts
    command: scheduler
